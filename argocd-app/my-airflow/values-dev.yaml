airflow:
  # Airflow home directory
  # Used for mount paths
  airflowHome: /opt/airflow

  # Default airflow repository -- overridden by all the specific images below
  defaultAirflowRepository: apache/airflow

  # Default airflow tag to deploy
  defaultAirflowTag: "2.7.3"

  # Airflow version (Used to make some decisions based on Airflow Version being deployed)
  airflowVersion: "2.7.3"

  # Images
  images:
    airflow:
      # To be replaced automatically by the Github Actions CICD workflow
      # in the DEB Application repository
      repository: 'us-central1-docker.pkg.dev/wizeline-deb/deb-capstone-airflow-gke/airflow2.7.3-custom'
      tag: '74f664b2'
      # Specifying digest takes precedence over tag.
      digest: ~
      pullPolicy: IfNotPresent

  # Add common labels to all objects and pods defined in this chart.
  labels:
    environment: dev

  executor: KubernetesExecutor

  # Provider Connections
  # https://airflow.apache.org/docs/helm-chart/stable/adding-connections-and-variables.html#connections-and-sensitive-environment-variables
  secret:
    - envName: "AIRFLOW_CONN_GCP"
      secretName: "airflow-gcp-connection"
      secretKey: "AIRFLOW_CONN_GCP"
    - envName: "AIRFLOW_CONN_POSTGRES"
      secretName: "airflow-db-connection-secret"
      secretKey: "AIRFLOW_CONN_POSTGRES"

  # Postgresql DB Connection  
  data:
    metadataSecretName: airflow-db-connection-secret

  # Enable testing connections
  env:
    - name: "AIRFLOW__CORE__TEST_CONNECTION"
      value: "Enabled"

  # Git sync
  dags:
    gitSync:
      enabled: true
      repo: git@github.com:uche-madu/deb-application.git
      branch: main
      subPath: "dags"
      sshKeySecret: airflow-ssh-secret

      # Get info about known_hosts from here: 
      # https://airflow.apache.org/docs/helm-chart/stable/production-guide.html#knownhosts
      knownHosts: |
        github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    
  enableBuiltInSecretEnvVars:
    AIRFLOW__CORE__FERNET_KEY: false
    AIRFLOW__WEBSERVER__SECRET_KEY: false
  
  fernetKeySecretName: "fernet-key-secret"
  
  webserverSecretKeySecretName: "airflow-webserver-secret"

  # Airflow webserver settings
  webserver:
    service:
      type: LoadBalancer
    
    # Create initial user.
    defaultUser:
      enabled: true
      role: Admin
      username: admin
      email: admin@example.com
      firstName: admin
      lastName: user
      password: admin

  postgresql:
    enabled: false
  
  pgbouncer:
    enabled: true

  redis:
    enabled: false

  workers:
    persistence:
      size: 1Gi
    serviceAccount:
      name: airflow-worker-wi-sa
  
  scheduler:
    serviceAccount:
      name: airflow-scheduler-wi-sa

  triggerer:
    persistence:
      size: 1Gi
  
  config:
    logging:
      remote_logging: 'True'
      remote_base_log_folder: 'gs://deb-capstone/airflow/logs/'
      remote_log_conn_id: 'gcp'

  # logs:
  #   persistence:
  #     # Enable persistent volume for storing logs
  #     enabled: true
  #     # Volume size for logs
  #     size: 1Gi
  #     # If using a custom storageClass, pass name here
  #     storageClassName: nfs-client

  # To avoid issues with database migrations when deploying with ArgoCD
  # https://airflow.apache.org/docs/helm-chart/stable/index.html#installing-the-chart-with-argo-cd-flux-rancher-or-terraform
  createUserJob:
    useHelmHooks: false
    applyCustomEnv: false
  migrateDatabaseJob:
    useHelmHooks: false
    applyCustomEnv: false
    jobAnnotations:
      "argocd.argoproj.io/hook": Sync

  statsd:
    overrideMappings:
      - "mappings:\r\n  # Airflow StatsD metrics mappings (https://airflow.apache.org/docs/apache-airflow/stable/logging-monitoring/metrics.html)\r\n  # === Counters ===\r\n  - match: \"(.+)\\\\.(.+)_start$\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_job_start\"\r\n    match_type: regex\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      job_name: \"$2\"\r\n  - match: \"(.+)\\\\.(.+)_end$\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_job_end\"\r\n    match_type: regex\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      job_name: \"$2\"\r\n  - match: \"(.+)\\\\.operator_failures_(.+)$\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_operator_failures\"\r\n    match_type: regex\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      operator_name: \"$2\"\r\n  - match: \"(.+)\\\\.operator_successes_(.+)$\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_operator_successes\"\r\n    match_type: regex\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      operator_name: \"$2\"\r\n  - match: \"*.ti_failures\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_ti_failures\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.ti_successes\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_ti_successes\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.zombies_killed\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_zombies_killed\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.scheduler_heartbeat\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_scheduler_heartbeat\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.dag_processing.processes\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_dag_processing_processes\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.scheduler.tasks.killed_externally\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_scheduler_tasks_killed_externally\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.scheduler.tasks.running\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_scheduler_tasks_running\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.scheduler.tasks.starving\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_scheduler_tasks_starving\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.scheduler.orphaned_tasks.cleared\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_scheduler_orphaned_tasks_cleared\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.scheduler.orphaned_tasks.adopted\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_scheduler_orphaned_tasks_adopted\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.scheduler.critical_section_busy\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_scheduler_critical_section_busy\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.sla_email_notification_failure\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_sla_email_notification_failure\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.ti.start.*.*\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_ti_start\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_id: \"$2\"\r\n      task_id: \"$3\"\r\n  - match: \"*.ti.finish.*.*.*\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_ti_finish\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_id: \"$2\"\r\n      task_id: \"$3\"\r\n      state: \"$4\"\r\n  - match: \"*.dag.callback_exceptions\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_dag_callback_exceptions\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.celery.task_timeout_error\"\r\n    match_metric_type: counter\r\n    name: \"af_agg_celery_task_timeout_error\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n\r\n  # === Gauges ===\r\n  - match: \"*.dagbag_size\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_dagbag_size\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.dag_processing.import_errors\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_dag_processing_import_errors\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.dag_processing.total_parse_time\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_dag_processing_total_parse_time\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.dag_processing.last_runtime.*\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_dag_processing_last_runtime\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_file: \"$2\"\r\n  - match: \"*.dag_processing.last_run.seconds_ago.*\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_dag_processing_last_run_seconds\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_file: \"$2\"\r\n  - match: \"*.dag_processing.processor_timeouts\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_dag_processing_processor_timeouts\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.executor.open_slots\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_executor_open_slots\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.executor.queued_tasks\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_executor_queued_tasks\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.executor.running_tasks\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_executor_running_tasks\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.pool.open_slots.*\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_pool_open_slots\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      pool_name: \"$2\"\r\n  - match: \"*.pool.queued_slots.*\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_pool_queued_slots\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      pool_name: \"$2\"\r\n  - match: \"*.pool.running_slots.*\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_pool_running_slots\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      pool_name: \"$2\"\r\n  - match: \"*.pool.starving_tasks.*\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_pool_starving_tasks\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      pool_name: \"$2\"\r\n  - match: \"*.smart_sensor_operator.poked_tasks\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_smart_sensor_operator_poked_tasks\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.smart_sensor_operator.poked_success\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_smart_sensor_operator_poked_success\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.smart_sensor_operator.poked_exception\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_smart_sensor_operator_poked_exception\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.smart_sensor_operator.exception_failures\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_smart_sensor_operator_exception_failures\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.smart_sensor_operator.infra_failures\"\r\n    match_metric_type: gauge\r\n    name: \"af_agg_smart_sensor_operator_infra_failures\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n\r\n  # === Timers ===\r\n  - match: \"*.dagrun.dependency-check.*\"\r\n    match_metric_type: observer\r\n    name: \"af_agg_dagrun_dependency_check\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_id: \"$2\"\r\n  - match: \"*.dag.*.*.duration\"\r\n    match_metric_type: observer\r\n    name: \"af_agg_dag_task_duration\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_id: \"$2\"\r\n      task_id: \"$3\"\r\n  - match: \"*.dag_processing.last_duration.*\"\r\n    match_metric_type: observer\r\n    name: \"af_agg_dag_processing_duration\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_file: \"$2\"\r\n  - match: \"*.dagrun.duration.success.*\"\r\n    match_metric_type: observer\r\n    name: \"af_agg_dagrun_duration_success\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_id: \"$2\"\r\n  - match: \"*.dagrun.duration.failed.*\"\r\n    match_metric_type: observer\r\n    name: \"af_agg_dagrun_duration_failed\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_id: \"$2\"\r\n  - match: \"*.dagrun.schedule_delay.*\"\r\n    match_metric_type: observer\r\n    name: \"af_agg_dagrun_schedule_delay\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_id: \"$2\"\r\n  - match: \"*.scheduler.critical_section_duration\"\r\n    match_metric_type: observer\r\n    name: \"af_agg_scheduler_critical_section_duration\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n  - match: \"*.dagrun.*.first_task_scheduling_delay\"\r\n    match_metric_type: observer\r\n    name: \"af_agg_dagrun_first_task_scheduling_delay\"\r\n    labels:\r\n      airflow_id: \"$1\"\r\n      dag_id: \"$2\""